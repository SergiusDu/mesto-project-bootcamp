{"version":3,"file":"main.js","mappings":";;;;;AAAa;;AAEb;AACA;AACA;AACA,gBAAgB,QAAQ,iDAAiD,kBAAkB;AAC3F;AACA;AACA;;AAEmC;;;ACVtB;;AAEgE;AAM3D;AAC4D;AACzB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,uBAAuB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA,QAAQ;AACR,qCAAqC,aAAa;AAClD;AACA;AACA;AACA,MAAM;AACN;AACA,oEAAoE,cAAc;AAClF;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oBAAoB;AACxB,IAAI,SAAS,CAAC,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,6BAA6B,cAAc;AAC3C;AACA,GAAG;AACH,+BAA+B,qBAAqB;AACpD;AACA,IAAI;AACJ;AACA;AACA,cAAc,oBAAoB;AAClC;AACA,QAAQ;AACR,8DAA8D,cAAc;AAC5E;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAE2C;;;ACtG9B;;AAEb;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEgE;;;ACrGnD;;AAE0B;AAC4B;AACZ;AAKrC;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE,iBAAiB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA,IAAI;AACJ;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe;AACxB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,uBAAuB;AAC/B;AACA,QAAQ;AACR;AACA,yDAAyD,cAAc;AACvE;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA,MAAM,UAAU;AAChB;AACA,MAAM;AACN,+CAA+C,cAAc;AAC7D,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,eAAe;AACrD,MAAM,uBAAuB;AAC7B;AACA,MAAM;AACN;AACA,4DAA4D,cAAc;AAC1E;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAeE;;;AC/LW;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","sources":["webpack:///./src/components/utils.js","webpack:///./src/components/card.js","webpack:///./src/components/validate.js","webpack:///./src/components/modal.js","webpack:///./src/components/profile.js","webpack:///./src/components/api.js","webpack:///./src/index.js"],"sourcesContent":["\"use strict\";\n\nfunction checkServerResponseKeys(object, expectedKeysArray) {\n  if (!expectedKeysArray.every((key) => object.hasOwnProperty(key))) {\n    throw new ReferenceError(\n      `Объект ${object} не содержит одного или более свойств из списка ${expectedKeysArray}`\n    );\n  }\n}\n\nexport { checkServerResponseKeys };\n","\"use strict\";\n\nimport { changeImagePopUpData, openPopUp, showImagePopUp } from \"./modal.js\";\nimport {\n  deleteCardFromServer,\n  getCardsFromServer,\n  removeLikeFromCard,\n  setLikeOnCard,\n} from \"./api.js\";\nimport { getLocalProfileObject, updateProfileFromServer } from \"./profile.js\";\nimport { checkServerResponseKeys } from \"./utils.js\";\n\nconst placeToInsert = document.querySelector(\".gallery__cards\");\nconst cardTemplate = document.querySelector(\".card__template\").content;\nconst cardObjectExpectedKeys = [\n  \"likes\",\n  \"_id\",\n  \"name\",\n  \"link\",\n  \"owner\",\n  \"createdAt\",\n];\nfunction getCard(cardObject) {\n  checkServerResponseKeys(cardObject, cardObjectExpectedKeys);\n  async function handleLikeButton(cardObject, likeButton, likesCountElement) {\n    try {\n      const cardId = cardObject._id;\n      const isUserAlreadyLikedCard = likeButton.classList.contains(\n        \"card__like-btn_checked\"\n      );\n      if (isUserAlreadyLikedCard) {\n        const cardFromServer = await removeLikeFromCard(cardId);\n        likesCountElement.textContent = cardFromServer.likes.length;\n        likeButton.classList.remove(\"card__like-btn_checked\");\n      } else {\n        const cardFromServer = await setLikeOnCard(cardId);\n        likesCountElement.textContent = cardFromServer.likes.length;\n        likeButton.classList.add(\"card__like-btn_checked\");\n      }\n    } catch (error) {\n      console.log(\n        `Не удалось поставить или убрать лайк у карточки. Ошибка: ${error.message}`\n      );\n    }\n  }\n  function checkIfUserAlreadyLikedCard(cardObject) {\n    const userId = getLocalProfileObject()._id;\n    return cardObject.likes.some((like) => like._id === userId);\n  }\n\n  const cardElement = cardTemplate.cloneNode(true);\n  const imageElement = cardElement.querySelector(\".card__image\");\n  const nameElement = cardElement.querySelector(\".card__title\");\n  const deleteCardButton = cardElement.querySelector(\".card__delete-btn\");\n  const likeButton = cardElement.querySelector(\".card__like-btn\");\n  const likesCountElement = cardElement.querySelector(\".card__likes-count\");\n  const isUserAlreadyLikedCard = checkIfUserAlreadyLikedCard(cardObject);\n  if (isUserAlreadyLikedCard) {\n    likeButton.classList.add(\"card__like-btn_checked\");\n  }\n  likesCountElement.textContent = cardObject.likes.length;\n  const imageLink = cardObject.link;\n  const imageName = cardObject.name;\n  imageElement.src = imageLink;\n  imageElement.alt = imageName;\n  function openImagePopUp() {\n    changeImagePopUpData(imageLink, imageName);\n    openPopUp(showImagePopUp);\n  }\n  imageElement.addEventListener(\"click\", openImagePopUp);\n  nameElement.textContent = cardObject.name;\n  likeButton.addEventListener(\"click\", async (event) => {\n    try {\n      await handleLikeButton(cardObject, likeButton, likesCountElement);\n    } catch (error) {\n      console.log(`Ошибка: ${error.message}`);\n    }\n  });\n  if (cardObject.owner._id !== getLocalProfileObject()._id) {\n    deleteCardButton.remove();\n  } else {\n    deleteCardButton.addEventListener(\"click\", async (event) => {\n      try {\n        await deleteCardFromServer(cardObject._id);\n        deleteCardButton.closest(\".card\").remove();\n      } catch (error) {\n        console.log(`Не удалось удалить карточку с сервера. ${error.message}`);\n      }\n    });\n  }\n  return cardElement;\n}\nfunction createCard(cardObject) {\n  const clonedTemplate = getCard(cardObject);\n  placeToInsert.prepend(clonedTemplate);\n}\nfunction createCardsFromList(listWithCards) {\n  listWithCards.forEach(function (card) {\n    createCard(card);\n  });\n}\n\nexport { createCard, createCardsFromList };\n","\"use strict\";\n\nconst hasInvalidInput = function (inputList) {\n  return Array.from(inputList).some((inputElement) => {\n    return !inputElement.validity.valid;\n  });\n};\nconst toggleButtonState = function (\n  inputList,\n  buttonElement,\n  inactiveButtonClass\n) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.classList.add(inactiveButtonClass);\n    buttonElement.disabled = true;\n  } else {\n    buttonElement.classList.remove(inactiveButtonClass);\n    buttonElement.disabled = false;\n  }\n};\nconst showError = (\n  formElement,\n  inputElement,\n  errorMessage,\n  inputErrorClass,\n  errorClass\n) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(errorClass);\n  inputElement.classList.add(inputErrorClass);\n};\nconst hideError = (formElement, inputElement, inputErrorClass, errorClass) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  errorElement.classList.remove(errorClass);\n  inputElement.classList.remove(inputErrorClass);\n  errorElement.textContent = \"\";\n};\n\nconst checkInputValidity = function (\n  formElement,\n  inputElement,\n  inputErrorClass,\n  errorClass\n) {\n  if (inputElement.validity.valid) {\n    hideError(\n      formElement,\n      inputElement,\n      inputErrorClass,\n      inputErrorClass,\n      errorClass\n    );\n  } else {\n    showError(\n      formElement,\n      inputElement,\n      inputElement.validationMessage,\n      inputErrorClass,\n      errorClass\n    );\n  }\n};\n\nconst setEventListeners = function (\n  formElement,\n  inputSelector,\n  buttonSelector,\n  inactiveButtonClass,\n  inputErrorClass,\n  errorClass\n) {\n  const inputList = Array.from(formElement.querySelectorAll(inputSelector));\n  const buttonElement = formElement.querySelector(buttonSelector);\n  toggleButtonState(inputList, buttonElement, inactiveButtonClass);\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener(\"input\", function (evt) {\n      checkInputValidity(\n        formElement,\n        inputElement,\n        inputErrorClass,\n        errorClass\n      );\n      toggleButtonState(inputList, buttonElement, inactiveButtonClass);\n    });\n  });\n};\nconst enableValidation = function (configObject) {\n  const forms = document.querySelectorAll(configObject.formSelector);\n  forms.forEach((formElement) => {\n    setEventListeners(\n      formElement,\n      configObject.inputSelector,\n      configObject.submitButtonSelector,\n      configObject.inactiveButtonClass,\n      configObject.inputErrorClass,\n      configObject.errorClass\n    );\n  });\n};\n\nexport { enableValidation, hasInvalidInput, toggleButtonState };\n","\"use strict\";\n\nimport { createCard } from \"./card.js\";\nimport { hasInvalidInput, toggleButtonState } from \"./validate.js\";\nimport { updateProfileInfoOnPage } from \"./profile.js\";\nimport {\n  uploadUserProfileToServer,\n  uploadNewAvatar,\n  uploadCardOnServer,\n} from \"./api.js\";\nconst showImagePopUp = document.querySelector(\".popup_for-image\");\nconst showPopUpImage = showImagePopUp.querySelector(\".popup__image\");\nconst showPopUpImageCaption = showImagePopUp.querySelector(\n  \".popup__image-caption\"\n);\n\nfunction resetPopUp(popUp) {\n  const popupInputs = popUp.querySelectorAll(\".popup__input\");\n  const popUpForm = popUp.querySelector(\".popup__form\");\n  popUpForm.reset();\n  popupInputs.forEach((inputElement) => {\n    inputElement.classList.remove(\"popup__input_type_error\");\n  });\n  const popupErrors = popUp.querySelectorAll(\".popup__error\");\n  popupErrors.forEach((errorElement) => {\n    errorElement.classList.remove(\".popup__error_visible\");\n    errorElement.textContent = \"\";\n  });\n  const submitButton = popUp.querySelector(\".popup__button\");\n  toggleButtonState(popupInputs, submitButton, \"popup__button_disabled\");\n}\n\nfunction openPopUp(popUp) {\n  popUp.classList.remove(\"popup_state_closed\");\n  popUp.classList.add(\"popup_state_opened\");\n  window.addEventListener(\"keydown\", handleEscapeKeyEvent);\n}\nfunction closePopUp(popUp) {\n  popUp.classList.add(\"popup_state_closed\");\n  popUp.classList.remove(\"popup_state_opened\");\n  window.removeEventListener(\"keydown\", handleEscapeKeyEvent);\n}\nasync function uploadProfileData(profileObject) {\n  try {\n    return await uploadUserProfileToServer(\n      profileObject.name,\n      profileObject.about\n    );\n  } catch (error) {\n    console.log(\n      `Ошибка обновления информации профиля. Ошибка: ${error.message}`\n    );\n  }\n}\n\nfunction showLoadingAnimationOnButton(buttonElement) {\n  buttonElement.classList.add(\"popup__button_loading\");\n  buttonElement.disabled = true;\n}\nfunction hideLoadingAnimationOnButton(buttonElement) {\n  buttonElement.classList.remove(\"popup__button_loading\");\n  buttonElement.disabled = false;\n}\n\nconst editProfilePopUp = document.querySelector(\".popup_for-editing-profile\");\nconst popUpNameInput = editProfilePopUp.querySelector(\".popup__name-input\");\nconst popUpAboutInput = editProfilePopUp.querySelector(\n  \".popup__profession-input\"\n);\nfunction setNameAndAboutToEditPopUp(name, about) {\n  popUpNameInput.value = name;\n  popUpAboutInput.value = about;\n}\nconst handleEditProfilePopUp = function () {\n  const saveButton = editProfilePopUp.querySelector(\".popup__button\");\n  const editProfilePopUpForm = editProfilePopUp.querySelector(\".popup__form\");\n  editProfilePopUpForm.addEventListener(\"submit\", async function (evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    const inputList = [popUpNameInput, popUpAboutInput];\n    if (!hasInvalidInput(inputList)) {\n      showLoadingAnimationOnButton(saveButton);\n      try {\n        const profileDataFromServer = await uploadProfileData({\n          name: popUpNameInput.value,\n          about: popUpAboutInput.value,\n        });\n        updateProfileInfoOnPage(profileDataFromServer);\n        closePopUp(editProfilePopUp);\n      } catch (error) {\n        console.log(\n          `Не удалось обновить данные профиля. Ошибка: ${error.message}`\n        );\n      } finally {\n        hideLoadingAnimationOnButton(saveButton);\n      }\n    }\n  });\n};\n\nconst changeImagePopUpData = function (imageURL, imageCaption) {\n  showPopUpImage.src = imageURL;\n  showPopUpImage.alt = imageCaption;\n  showPopUpImageCaption.textContent = imageCaption;\n};\nconst addNewPlacePopUp = document.querySelector(\".popup_for-adding-place\");\nconst handleNewPlacePopUp = function () {\n  const addNewPlaceBtn = addNewPlacePopUp.querySelector(\".popup__button\");\n  const placeName = addNewPlacePopUp.querySelector(\".popup__place-name-input\");\n  const placeUrl = addNewPlacePopUp.querySelector(\".popup__place-url-input\");\n  const newPlacePopUpForm = addNewPlacePopUp.querySelector(\".popup__form\");\n  newPlacePopUpForm.addEventListener(\"submit\", async function (evt) {\n    evt.preventDefault();\n    showLoadingAnimationOnButton(addNewPlaceBtn);\n    try {\n      const cardFromServer = await uploadCardOnServer(\n        placeName.value,\n        placeUrl.value\n      );\n      createCard(cardFromServer);\n      closePopUp(addNewPlacePopUp);\n    } catch (error) {\n      console.log(`Ошибка создания карточки. ${error.message}`);\n    } finally {\n      hideLoadingAnimationOnButton(addNewPlaceBtn);\n    }\n  });\n};\n\nconst editAvatarPopUp = document.querySelector(\n  \".popup_for-updating-profile-avatar\"\n);\nfunction handleEditAvatarPopUp() {\n  const editAvatarPopUpForm = editAvatarPopUp.querySelector(\n    \".popup__form-for-updating-profile-avatar\"\n  );\n  const avatarUrlInput = editAvatarPopUp.querySelector(\n    \".popup__avatar-link-input\"\n  );\n  const submitButton = editAvatarPopUpForm.querySelector(\".popup__button\");\n  async function handelSubmit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    try {\n      showLoadingAnimationOnButton(submitButton);\n      const profileFromServer = await uploadNewAvatar(avatarUrlInput.value);\n      updateProfileInfoOnPage(profileFromServer);\n      closePopUp(editAvatarPopUp);\n    } catch (error) {\n      console.log(\n        `Не удалось обновить аватар пользователя. Ошибка: ${error.message}`\n      );\n    } finally {\n      hideLoadingAnimationOnButton(submitButton);\n    }\n  }\n  editAvatarPopUpForm.addEventListener(\"submit\", handelSubmit);\n}\nfunction handleCloseButtonsAndPopUpOverlay() {\n  const closeButtons = document.querySelectorAll(\".popup__close-btn\");\n  closeButtons.forEach((button) => {\n    const popup = button.closest(\".popup\");\n    popup.addEventListener(\"click\", (evt) => {\n      if (evt.target.classList.contains(\"popup\")) {\n        closePopUp(popup);\n      }\n    });\n    button.addEventListener(\"click\", () => closePopUp(popup));\n  });\n}\n\nfunction handleEscapeKeyEvent(event) {\n  if (event.key === \"Escape\") {\n    const openedPopUp = document.querySelector(\".popup_state_opened\");\n    closePopUp(openedPopUp);\n  }\n}\n\nexport {\n  handleEditAvatarPopUp,\n  editAvatarPopUp,\n  handleEditProfilePopUp,\n  editProfilePopUp,\n  openPopUp,\n  changeImagePopUpData,\n  addNewPlacePopUp,\n  showImagePopUp,\n  handleNewPlacePopUp,\n  setNameAndAboutToEditPopUp,\n  resetPopUp,\n  handleCloseButtonsAndPopUpOverlay,\n};\n","\"use strict\";\nimport { getProfileDataFromServer } from \"./api.js\";\nimport {\n  addNewPlacePopUp,\n  editProfilePopUp,\n  editAvatarPopUp,\n  openPopUp,\n  resetPopUp,\n  setNameAndAboutToEditPopUp,\n} from \"./modal.js\";\nconst localProfileObject = {\n  name: \"\",\n  about: \"\",\n  avatar: \"\",\n  _id: \"\",\n  cohort: \"\",\n};\nconst profileNameElement = document.querySelector(\".profile__name\");\nconst profileAboutElement = document.querySelector(\".profile__profession\");\nconst profileImageElement = document.querySelector(\".profile__picture\");\nfunction getLocalProfileObject() {\n  return localProfileObject;\n}\nfunction setLocalProfileObject(name, about, avatar) {\n  localProfileObject.name = name;\n  localProfileObject.about = about;\n  localProfileObject.avatar = avatar;\n}\n\nfunction updateProfileInfoOnPage(profileObject) {\n  profileNameElement.textContent = profileObject.name;\n  profileAboutElement.textContent = profileObject.about;\n  profileImageElement.src = profileObject.avatar;\n}\n\nasync function updateProfileFromServer() {\n  try {\n    const profileDataFromServer = await getProfileDataFromServer();\n    Object.assign(localProfileObject, profileDataFromServer);\n    updateProfileInfoOnPage(getLocalProfileObject());\n    return profileDataFromServer;\n  } catch (error) {\n    console.log(`Ошибка : ${error.message}`);\n  }\n}\n\nfunction handleProfileBlock() {\n  const profileBlock = document.querySelector(\".profile\");\n  const avatarButton = document.querySelector(\".profile__change-avatar-button\");\n  const editProfileBtn = profileBlock.querySelector(\".profile__edit-btn\");\n  const addNewPictureBtn = profileBlock.querySelector(\".profile__add-btn\");\n  function openEditProfilePopUp() {\n    resetPopUp(editProfilePopUp);\n    setNameAndAboutToEditPopUp(\n      profileNameElement.textContent,\n      profileAboutElement.textContent\n    );\n    openPopUp(editProfilePopUp);\n  }\n  editProfileBtn.addEventListener(\"click\", openEditProfilePopUp);\n  addNewPictureBtn.addEventListener(\"click\", (evt) => {\n    evt.stopPropagation();\n    resetPopUp(addNewPlacePopUp);\n    openPopUp(addNewPlacePopUp);\n  });\n  avatarButton.addEventListener(\"click\", (evt) => {\n    evt.stopPropagation();\n    resetPopUp(editAvatarPopUp);\n    openPopUp(editAvatarPopUp);\n  });\n}\n\nexport {\n  updateProfileFromServer,\n  handleProfileBlock,\n  getLocalProfileObject,\n  setLocalProfileObject,\n  localProfileObject,\n  updateProfileInfoOnPage,\n};\n","\"use strict\";\n\nimport { updateProfileFromServer } from \"./profile\";\n\nconst config = {\n  baseUrl: \"https://nomoreparties.co/v1/wbf-cohort-6\",\n  headers: {\n    authorization: \"99d97c75-629e-46fe-8490-24ad8926f786\",\n    \"Content-Type\": \"application/json\",\n  },\n};\nconst profileObjectExpectedKeys = [\"name\", \"about\", \"avatar\", \"_id\", \"cohort\"];\n\nasync function fetchData(requestUrl, options) {\n  try {\n    const response = await fetch(requestUrl, options);\n    if (!response.ok) {\n      throw new Error(\"HTTP error: ${response.status}\");\n    } else {\n      return await response.json();\n    }\n  } catch (error) {\n    const errorMessage = `${error.name}: ${error.message}\\\\nСтек вызовов: ${error.stack}\\\\nФайл: ${error.fileName}\\\\nСтрока: ${error.lineNumber}\\\\nКолонка: ${error.columnNumber}\\\\nОписание: ${error.description}`;\n    if (error instanceof TypeError) {\n      throw new TypeError(`Type Error: ${errorMessage}. `);\n    } else if (error.name === \"AbortError\") {\n      throw new Error(`Запрос был прерван: ${errorMessage}`);\n    } else if (error.message.startsWith(\"HTTP error\")) {\n      throw new Error(`Ошибка HTTP: ${errorMessage}`);\n    } else {\n      throw new Error(`Неизвестная ошибка: ${errorMessage}`);\n    }\n  }\n}\nasync function getProfileDataFromServer() {\n  const getProfileApiPAth = `${config.baseUrl}/users/me`;\n  const options = {\n    headers: config.headers,\n  };\n  return await fetchData(getProfileApiPAth, options);\n}\n\nasync function uploadUserProfileToServer(name, about) {\n  const updateProfileApiPAth = `${config.baseUrl}/users/me`;\n  const options = {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      about: about,\n    }),\n  };\n  try {\n    return await fetchData(updateProfileApiPAth, options);\n  } catch (error) {\n    const errorMessage = `${error.name}: ${error.message}\\\\nСтек вызовов: ${error.stack}\\\\nФайл: ${error.fileName}\\\\nСтрока: ${error.lineNumber}\\\\nКолонка: ${error.columnNumber}\\\\nОписание: ${error.description}`;\n    throw new Error(\n      `Ошибка загрузки данных о профиле на сервер. \\n` + errorMessage\n    );\n  }\n}\n\nasync function uploadNewAvatar(avatarUrl) {\n  const uploadNewAvatarApiUrl = `${config.baseUrl}/users/me/avatar`;\n  const options = {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatarUrl,\n    }),\n  };\n  try {\n    return await fetchData(uploadNewAvatarApiUrl, options);\n  } catch (error) {\n    const errorMessage = `${error.name}: ${error.message}\\\\nСтек вызовов: ${error.stack}\\\\nФайл: ${error.fileName}\\\\nСтрока: ${error.lineNumber}\\\\nКолонка: ${error.columnNumber}\\\\nОписание: ${error.description}`;\n    throw new Error(`Не удалось изменить аватар. \\n` + errorMessage);\n  }\n}\n\nasync function getCardsFromServer() {\n  const getCardsFromServerUrl = `${config.baseUrl}/cards`;\n  const options = Object.assign({ method: \"GET\" }, config);\n  return await fetchData(getCardsFromServerUrl, options);\n}\nasync function uploadCardOnServer(name, link) {\n  const uploadCardOnServerApiUrl = `${config.baseUrl}/cards`;\n  const options = {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link,\n    }),\n  };\n  const response = await fetchData(uploadCardOnServerApiUrl, options);\n  try {\n    return response;\n  } catch (error) {\n    const errorMessage = `${error.name}: ${error.message}\\\\nСтек вызовов: ${error.stack}\\\\nФайл: ${error.fileName}\\\\nСтрока: ${error.lineNumber}\\\\nКолонка: ${error.columnNumber}\\\\nОписание: ${error.description}`;\n    throw new Error(`Не удалось создать карточку. \\n` + errorMessage);\n  }\n}\nasync function deleteCardFromServer(cardId) {\n  const deleteCardApiURL = `${config.baseUrl}/cards/${cardId}`;\n  const options = {\n    method: \"DELETE\",\n    headers: config.headers,\n  };\n  return await fetchData(deleteCardApiURL, options);\n}\n\nasync function setLikeOnCard(cardId) {\n  const deleteCardApiURL = `${config.baseUrl}/cards/likes/${cardId}`;\n  const options = {\n    method: \"PUT\",\n    headers: config.headers,\n  };\n  return await fetchData(deleteCardApiURL, options);\n}\nasync function removeLikeFromCard(cardId) {\n  const deleteCardApiURL = `${config.baseUrl}/cards/likes/${cardId}`;\n  const options = {\n    method: \"DELETE\",\n    headers: config.headers,\n  };\n  return await fetchData(deleteCardApiURL, options);\n}\nexport {\n  getProfileDataFromServer,\n  uploadUserProfileToServer,\n  getCardsFromServer,\n  uploadCardOnServer,\n  deleteCardFromServer,\n  uploadNewAvatar,\n  setLikeOnCard,\n  removeLikeFromCard,\n};\n","\"use strict\";\nimport \"./pages/index.css\";\nimport {\n  getCardsFromServer,\n  getProfileDataFromServer,\n} from \"./components/api.js\";\nimport {\n  updateProfileFromServer,\n  handleProfileBlock,\n} from \"./components/profile.js\";\n\nimport {\n  openPopUp,\n  handleEditProfilePopUp,\n  editProfilePopUp,\n  handleImagePopUpBlock,\n  addNewPlacePopUp,\n  handleNewPlacePopUp,\n  handleEditAvatarPopUp,\n  handleCloseButtonsAndPopUpOverlay,\n} from \"./components/modal.js\";\nimport { cardsHandler, createCardsFromList } from \"./components/card.js\";\nimport { enableValidation } from \"./components/validate.js\";\n\nasync function handleIndex() {\n  try {\n    try {\n      await updateProfileFromServer();\n    } catch (error) {\n      console.log(\n        `Не удалось обновить профиль пользователя. Ошибка: ${error.message}`\n      );\n    }\n    handleCloseButtonsAndPopUpOverlay();\n    handleEditProfilePopUp();\n    handleProfileBlock();\n    handleEditAvatarPopUp();\n    handleNewPlacePopUp();\n    enableValidation({\n      formSelector: \".popup__form\",\n      inputSelector: \".popup__input\",\n      submitButtonSelector: \".popup__button\",\n      inactiveButtonClass: \"popup__button_disabled\",\n      inputErrorClass: \"popup__input_type_error\",\n      errorClass: \"popup__error_visible\",\n    });\n    createCardsFromList(await getCardsFromServer());\n  } catch (error) {\n    console.log(`Ошибка на странице: ${error.message}`);\n  }\n}\n\nhandleIndex();\n"],"names":[],"sourceRoot":""}